// test.hex - 扩展的RISC-V指令测试集
// 格式： [地址] 指令码  // 汇编指令  # 注释

// ===== 1. 算术/逻辑运算指令测试 =====
00000093  // addi x1, x0, 0     # x1 = 0 (初始化)
00100113  // addi x2, x0, 1     # x2 = 1 (初始化)
002081B3  // add  x3, x1, x2    # x3 = x1 + x2 = 1 (加法测试)
403100B3  // sub  x1, x2, x3    # x1 = x2 - x3 = 0 (减法测试)
003170B3  // and  x1, x2, x3    # x1 = x2 & x3 = 1 (AND测试)
003160B3  // or   x1, x2, x3    # x1 = x2 | x3 = 1 (OR测试)
003140B3  // xor  x1, x2, x3    # x1 = x2 ^ x3 = 0 (XOR测试)
003120B3  // slt  x1, x2, x3    # x1 = (x2 < x3) ? 1 : 0 = 0 (有符号比较测试)

// ===== 2. 立即数指令测试 =====
00C00193  // addi x3, x0, 12    # x3 = 12 (立即数加法)
FF718213  // addi x4, x3, -9    # x4 = x3 + (-9) = 3 (负立即数测试)
0021F293  // andi x5, x3, 2     # x5 = x3 & 2 = 0 (ANDI测试)
0021E313  // ori  x6, x3, 2     # x6 = x3 | 2 = 14 (ORI测试)
0021C393  // xori x7, x3, 2     # x7 = x3 ^ 2 = 14 (XORI测试)
0021A413  // slti x8, x3, 2     # x8 = (x3 < 2) ? 1 : 0 = 0 (SLTI测试)

// ===== 3. 内存访问指令测试 =====
00002223  // sw   x0, 4(x0)     # MEM[4] = x0 = 0 (存储字测试)
00402083  // lw   x1, 4(x0)     # x1 = MEM[4] = 0 (加载字测试)

// ===== 4. 分支指令测试 =====
00208463  // beq  x1, x2, 8     # if x1==x2 pc+=8 (不跳转，x1=0, x2=1)
00108063  // beq  x1, x0, 0     # if x1==x0 pc+=0 (跳转到下条指令)
0020C463  // blt  x1, x2, 8     # if x1<x2 pc+=8 (跳转，x1=0<1=x2)

// ===== 5. 其他指令测试 =====
00000013  // nop                # 空操作 (流水线气泡)
00000433  // addi x8, x0, 0     # x8 = 0 (复位寄存器)
00440413  // addi x8, x8, 4     # x8 += 4 (循环计数器示例)
FF5FF06F  // jal  x0, -12       # pc += -12 (无条件跳转，创建简单循环)
